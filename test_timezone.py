"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∞–π–º–∑–æ–Ω—ã
"""
from common.timezone_utils import get_user_timezone, get_timezone_display_name, get_available_timezones


def test_timezone_detection():
    """–¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∞–π–º–∑–æ–Ω—ã –ø–æ —è–∑—ã–∫–æ–≤–æ–º—É –∫–æ–¥—É"""
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —è–∑—ã–∫–æ–≤—ã–µ –∫–æ–¥—ã
    test_cases = [
        ('ru', 'Europe/Moscow'),
        ('kz', 'Asia/Almaty'),
        ('en', 'UTC'),
        ('de', 'Europe/Berlin'),
        ('unknown', 'UTC'),  # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å UTC
        (None, 'UTC'),       # None –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å UTC
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∞–π–º–∑–æ–Ω—ã:")
    for language_code, expected_timezone in test_cases:
        result = get_user_timezone(language_code)
        status = "‚úÖ" if result == expected_timezone else "‚ùå"
        print(f"{status} {language_code} -> {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected_timezone})")
    
    print("\nüåç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–π–º–∑–æ–Ω—ã:")
    timezones = get_available_timezones()
    for tz, display in timezones.items():
        print(f"  {tz}: {display}")
    
    print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π:")
    examples = ['Europe/Moscow', 'Asia/Almaty', 'UTC', 'Asia/Tokyo']
    for tz in examples:
        display = get_timezone_display_name(tz)
        print(f"  {tz}: {display}")


if __name__ == "__main__":
    test_timezone_detection()
